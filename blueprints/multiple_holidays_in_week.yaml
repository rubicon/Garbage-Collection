blueprint:
  name: Multiple holidays in week
  description: >-
    Loop through all calculated dates, move the collection by a day for each
    public holiday in the collection week, before or on the collection date.
  domain: automation
  source_url: https://github.com/bruxy70/Garbage-Collection/blob/development/blueprints/multiple_holidays_in_week.yaml
  input:
    garbage_collection_entity:
      name: Garbage Collection Entity
      description: Triggered by the event for this entity.
      selector:
        entity:
          integration: garbage_collection
    holiday_entity:
      name: Holidays
      description: Entity containing the holidays - an instance of Holidays custom integration (available through HACS)
      selector:
        entity:
          integration: holidays
mode: parallel
trigger:
  - platform: event
    event_type: garbage_collection_loaded
    event_data:
      entity_id: !input garbage_collection_entity
action:
  - variables:
      holiday_entity: !input holiday_entity
  - repeat:
      count: "{{ trigger.event.data.collection_dates | count }}"
      sequence:
        - condition: template
          value_template: >-
            {%- set collection_date = as_datetime(trigger.event.data.collection_dates[repeat.index-1]) %}
            {%- set ns = namespace(found=false) %}
            {%- for i in range(collection_date.weekday()+1) %}
              {%- set d = ( collection_date + timedelta( days=-i) ) | as_timestamp | timestamp_custom("%Y-%m-%d") %}
              {%- if d in state_attr(holiday_entity,'holidays') %}
                {%- set ns.found = true %}
              {%- endif %}
            {%- endfor %}  
            {{ ns.found }}
        - service: garbage_collection.offset_date
          data:
            entity_id: "{{ trigger.event.data.entity_id }}"
            date: "{{ trigger.event.data.collection_dates[repeat.index-1] }}"
            offset: >-
              {%- set collection_date = as_datetime(trigger.event.data.collection_dates[repeat.index-1]) %}
              {%- set ns = namespace(found_free=false, offset=0) %}
              {%- for i in range(collection_date.weekday()+1) %}
                {%- set d = ( collection_date + timedelta( days=-i) ) | as_timestamp | timestamp_custom("%Y-%m-%d") %}
                {%- if d in state_attr(holiday_entity,'holidays') %}
                  {%- set ns.offset = ns.offset + 1 %}
                {%- endif %}
              {%- endfor %}  
              {%- for _ in range(7) if not ns.found_free %}
                {%- set d = ( collection_date + timedelta( days=ns.offset) ) | as_timestamp | timestamp_custom("%Y-%m-%d") %}
                {%- if d in state_attr(holiday_entity,'holidays') %}
                  {%- set ns.offset = ns.offset + 1 %}
                {% else %}
                  {%- set ns.found_free = true %}
                {%- endif %}
              {% endfor %}
              {{ ns.offset }}
  - service: garbage_collection.update_state
    data:
      entity_id: "{{ trigger.event.data.entity_id }}"
